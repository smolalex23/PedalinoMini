;   __________           .___      .__  .__                 _____  .__       .__     ___ ________________    ___
;   \______   \ ____   __| _/____  |  | |__| ____   ____   /     \ |__| ____ |__|   /  / \__    ___/     \   \  \
;    |     ___// __ \ / __ |\__  \ |  | |  |/    \ /  _ \ /  \ /  \|  |/    \|  |  /  /    |    | /  \ /  \   \  \
;    |    |   \  ___// /_/ | / __ \|  |_|  |   |  (  <_> )    Y    \  |   |  \  | (  (     |    |/    Y    \   )  )
;    |____|    \___  >____ |(____  /____/__|___|  /\____/\____|__  /__|___|  /__|  \  \    |____|\____|__  /  /  /
;                  \/     \/     \/             \/               \/        \/       \__\                 \/  /__/
;                                                                                      (c) 2018-2024 alf45star
;                                                                          https://github.com/alf45tar/PedalinoMini

[platformio]
default_envs  = bpi-leaf-s3, ttgo-t-display, esp32dev, esp32doit-devkit-v1, esp32doit-devkit-v1-ble, esp32doit-devkit-v1-wifi, esp-wrover-kit, heltec_wifi_kit_32, ttgo-t-eight, ttgo-t-eight-ble, ttgo-t-eight-wifi
;workspace_dir = ~/Downloads/PedalinoMini

[common]
lib_deps	=
 	bxparks/AceButton@^1.10.1												;	https://github.com/bxparks/AceButton
	bblanchon/ArduinoJson@^6.21.5											;	https://github.com/bblanchon/ArduinoJson
	me-no-dev/AsyncTCP@^1.1.1												;	https://github.com/me-no-dev/AsyncTCP
;	https://github.com/me-no-dev/ESPAsyncWebServer.git						;	https://github.com/me-no-dev/ESPAsyncWebServer
	ESPAsyncWebServer-esphome@^3.1.0										;	https://github.com/esphome/ESPAsyncWebServer/
	fastled/FastLED@^3.6.0													;	https://github.com/FastLED/FastLED
	d03n3rfr1tz3/HC-SR04@^1.1.2												;	https://github.com/d03n3rfr1tz3/HC-SR04
	esphome/Improv@^1.2.3													;	https://github.com/improv-wifi/sdk-cpp
	majicdesigns/MD_REncoder@^1.0.1											;	https://github.com/MajicDesigns/MD_REncoder
	h2zero/NimBLE-Arduino@^1.4.1											;	https://github.com/h2zero/NimBLE-Arduino
	https://github.com/CNMAT/OSC@^1.3.7										;	https://github.com/CNMAT/OSC
	dxinteractive/ResponsiveAnalogRead@^1.2.1								;	https://github.com/dxinteractive/ResponsiveAnalogRead
	bodmer/TFT_eSPI@2.5.33													;	https://github.com/Bodmer/TFT_eSPI
	fortyseveneffects/MIDI Library@^5.0.2									;	https://github.com/FortySevenEffects/arduino_midi_library
 	lathoub/AppleMIDI@^3.2.0												;	https://github.com/lathoub/Arduino-AppleMIDI-Library
	lathoub/BLE-MIDI@^2.2													;	https://github.com/lathoub/Arduino-BLE-MIDI
 	lathoub/ipMIDI@^1.0.3													;	https://github.com/lathoub/Arduino-ipMIDI
	ryokosaka/Hello Drum@^0.7.7												;	https://github.com/RyoKosaka/HelloDrum-arduino-Library

build_flags	=
	-D PEDALINO_MINI
	-D PLATFORMIO_ENV=$PIOENV
	-D DEBUG_ESP_PORT=Serial
	-D CORE_DEBUG_LEVEL=ARDUHAL_LOG_LEVEL_WARN
;	-D CONFIG_ASYNC_TCP_RUNNING_CORE=0
;	-D CONFIG_ASYNC_TCP_USE_WDT=0
	-D DIAGNOSTIC
	-D NVS
	-D SMARTCONFIG
	-D WPS
;	-D WEBSOCKET
;	-D NOWEBCONFIG
;	-D BLECLIENT
;	-D BLUFI
;	-D ARDUINOOTA

build_flags_esp32 =
	-D SSD1306WIRE
;	-D SSH1106WIRE

build_flags_esp32-ble =
	-D NOWIFI
	-D SSD1306WIRE

build_flags_esp32-wifi =
	-D NOBLE
	-D SSD1306WIRE

build_flags_heltec_wifi_kit_32 =
	-D HELTEC_WIFI_KIT_32
	-D BATTERY

build_flags_ttgo_t_eight =
	-D TTGO_T_EIGHT
	-DBOARD_HAS_PSRAM					;	not enabled by default
	-mfix-esp32-psram-cache-issue

build_flags_ttgo_t_eight-ble =
	-D TTGO_T_EIGHT
	-DBOARD_HAS_PSRAM
	-mfix-esp32-psram-cache-issue
	-D NOWIFI

build_flags_ttgo_t_eight-wifi =
	-D TTGO_T_EIGHT
	-DBOARD_HAS_PSRAM
	-mfix-esp32-psram-cache-issue
	-D NOBLE

build_flags_lilygo_t_display =
	-D BATTERY
	-D USER_SETUP_LOADED				;	TFT_eSPI configuration setup defined in platformio.ini
  	-D ST7789_DRIVER					;	TTGO T-Display TFT display driver to load
	-D TFT_SDA_READ
  	-D TFT_WIDTH=135
  	-D TFT_HEIGHT=240
	-D CGRAM_OFFSET
  	-D TFT_MOSI=19
  	-D TFT_SCLK=18
  	-D TFT_CS=5
  	-D TFT_DC=16
  	-D TFT_RST=23
	-D TFT_BL=4
	-D TFT_BACKLIGHT_ON=1
  	-D LOAD_GLCD
	-D LOAD_GFXFF
	-D SMOOTH_FONT
  	-D SPI_FREQUENCY=40000000			;	40 Mhz is the maximum for the ST7789V
	-D SPI_READ_FREQUENCY=6000000		; 	 6 MHz is the maximum SPI read speed for the ST7789V

build_flags_bpi_leaf_s3 =
	-D PLATFORMIO_ENV=$PIOENV
	-D PEDALINO_MINI
	-D DEBUG_ESP_PORT=Serial
	-D CORE_DEBUG_LEVEL=ARDUHAL_LOG_LEVEL_INFO
	;-D ARDUINO_USB_CDC_ON_BOOT=1
	;-D ARDUINO_USB_DFU_ON_BOOT=0
	;-D ARDUINO_USB_MSC_ON_BOOT=0
	-D CFG_TUD_ENABLED=1
	-D CFG_TUD_MIDI=1
	-D CFG_TUD_MIDI_RX_BUFSIZE=64
	-D CFG_TUD_MIDI_TX_BUFSIZE=64
	-D USE_TINYUSB
   	-D ARDUINO_USB_MODE=0 
   	-I include/
	'-DCFG_TUSB_CONFIG_FILE="tusb_config.h"'
	-D DIAGNOSTIC
	-D NVS
	-D BATTERY
	-D SMARTCONFIG
	-D WPS
	-D SSD1306WIRE

build_flags_lilygo-t-display-s3 =
	-D ARDUINO_USB_CDC_ON_BOOT=1
    -D ARDUINO_USB_MODE=0				;	Disables CDC mode and turns on OTG.
										;	In order to flash the firmware you had to set the device manually into boot mode by pressing the BOOT and the RESET button.
										;	The device stay in download mode after flashing so you had to press the RESET button once more.
	-D BATTERY
	-D USER_SETUP_LOADED				;	TFT_eSPI configuration setup defined in platformio.ini
	-D ST7789_DRIVER
	-D INIT_SEQUENCE_3					; 	Using this initialisation sequence improves the display image
	-D CGRAM_OFFSET
	-D TFT_RGB_ORDER=TFT_RGB
	-D TFT_INVERSION_ON
	-D TFT_PARALLEL_8_BIT
	-D TFT_WIDTH=170
	-D TFT_HEIGHT=320
	-D TFT_CS=6
	-D TFT_DC=7
	-D TFT_RST=5
	-D TFT_WR=8
	-D TFT_RD=9
	-D TFT_D0=39
	-D TFT_D1=40
	-D TFT_D2=41
	-D TFT_D3=42
	-D TFT_D4=45
	-D TFT_D5=46
	-D TFT_D6=47
	-D TFT_D7=48
	-D TFT_BL=38
	-D TFT_BACKLIGHT_ON=HIGH
	-D LOAD_GLCD
	-D LOAD_GFXFF
	-D SMOOTH_FONT

[env]
platform				= espressif32@^3.5.0
framework				= arduino
board					= esp32dev
board_build.f_flash		= 80000000L
board_build.partitions	= src/partitions_no_ota.csv
build_type				= release		;	release, test, debug
lib_deps				= ${common.lib_deps}
monitor_speed			= 115200
monitor_filters			= esp32_exception_decoder, default

[env:esp32dev]
build_flags = 	${common.build_flags}
				${common.build_flags_esp32}
lib_deps	= 	${common.lib_deps}
				thingpulse/ESP8266 and ESP32 OLED driver for SSD1306 displays@^4.3.0	;	https://github.com/ThingPulse/esp8266-oled-ssd1306

[env:esp32doit-devkit-v1]
board 		= 	esp32doit-devkit-v1
build_flags = 	${common.build_flags}
				${common.build_flags_esp32}
lib_deps	= 	${common.lib_deps}
				thingpulse/ESP8266 and ESP32 OLED driver for SSD1306 displays@^4.3.0	;	https://github.com/ThingPulse/esp8266-oled-ssd1306

[env:esp32doit-devkit-v1-ble]
board 		= 	esp32doit-devkit-v1
build_flags = 	${common.build_flags}
				${common.build_flags_esp32-ble}
lib_deps	= 	${common.lib_deps}
				thingpulse/ESP8266 and ESP32 OLED driver for SSD1306 displays@^4.3.0	;	https://github.com/ThingPulse/esp8266-oled-ssd1306
board_build.partitions = src/partitions_ota.csv

[env:esp32doit-devkit-v1-wifi]
board 		= 	esp32doit-devkit-v1
build_flags = 	${common.build_flags}
				${common.build_flags_esp32-wifi}
lib_deps	= 	${common.lib_deps}
				thingpulse/ESP8266 and ESP32 OLED driver for SSD1306 displays@^4.3.0	;	https://github.com/ThingPulse/esp8266-oled-ssd1306
board_build.partitions = src/partitions_ota.csv

[env:esp-wrover-kit]
board 		= 	esp-wrover-kit
build_flags = 	${common.build_flags}
				${common.build_flags_esp32}
lib_deps	= 	${common.lib_deps}
				thingpulse/ESP8266 and ESP32 OLED driver for SSD1306 displays@^4.3.0	;	https://github.com/ThingPulse/esp8266-oled-ssd1306

[env:heltec_wifi_kit_32]
board		= 	heltec_wifi_kit_32
build_flags	= 	${common.build_flags}
				${common.build_flags_heltec_wifi_kit_32}
lib_deps	= 	${common.lib_deps}
				HelTecAutomation/Heltec ESP32 Dev-Boards@^1.1.2							;	https://github.com/HelTecAutomation/Heltec_ESP32		;  replacement of https://github.com/ThingPulse/esp8266-oled-ssd1306

[env:ttgo-t-eight]
build_flags = 	${common.build_flags}
				${common.build_flags_ttgo_t_eight}
lib_deps	= 	${common.lib_deps}
				thingpulse/ESP8266 and ESP32 OLED driver for SSD1306 displays@^4.3.0	;	https://github.com/ThingPulse/esp8266-oled-ssd1306

[env:ttgo-t-eight-ble]
build_flags =	${common.build_flags}
				${common.build_flags_ttgo_t_eight-ble}
lib_deps	= 	${common.lib_deps}
				thingpulse/ESP8266 and ESP32 OLED driver for SSD1306 displays@^4.3.0	;	https://github.com/ThingPulse/esp8266-oled-ssd1306

[env:ttgo-t-eight-wifi]
build_flags =	${common.build_flags}
				${common.build_flags_ttgo_t_eight-wifi}
lib_deps	= 	${common.lib_deps}
				thingpulse/ESP8266 and ESP32 OLED driver for SSD1306 displays@^4.3.0	;	https://github.com/ThingPulse/esp8266-oled-ssd1306

[env:ttgo-t-display]
build_flags	= 	${common.build_flags}
				${common.build_flags_ttgo_t_display}

[env:lilygo-t-display]
platform  	= 	espressif32@^6.5.0
framework 	= 	arduino
board		=	lilygo-t-display
build_flags	= 	${common.build_flags}
				${common.build_flags_lilygo_t_display}
; https://www.silabs.com/documents/public/software/Mac_OSX_VCP_Driver.zip
;upload_port  = /dev/tty.SLAB_USBtoUART
;upload_port  = COM5
;monitor_port = ${env:ttgo-t-display.upload_port}
;monitor_port = /dev/tty.SLAB_USBtoUART

[env:bpi-leaf-s3]
platform  	= espressif32@^6.0.0
framework 	= arduino
board     	= bpi_leaf_s3
board_build.partitions = src/partitions_bpi_leaf_s3.csv
build_flags	= ${common.build_flags_bpi_leaf_s3}
lib_deps	= 	bxparks/AceButton@^1.9.2												;	https://github.com/bxparks/AceButton
				bblanchon/ArduinoJson@^6.20.1											;	https://github.com/bblanchon/ArduinoJson
				me-no-dev/AsyncTCP@^1.1.1												;	https://github.com/me-no-dev/AsyncTCP
				;me-no-dev/ESP Async WebServer@^1.2.3									;	https://github.com/me-no-dev/ESPAsyncWebServer
				https://github.com/me-no-dev/ESPAsyncWebServer.git
				thingpulse/ESP8266 and ESP32 OLED driver for SSD1306 displays@^4.3.0	;	https://github.com/ThingPulse/esp8266-oled-ssd1306
				fastled/FastLED@^3.5.0													;	https://github.com/FastLED/FastLED
				d03n3rfr1tz3/HC-SR04@^1.1.2												;	https://github.com/d03n3rfr1tz3/HC-SR04
				esphome/Improv@^1.2.3													;	https://github.com/improv-wifi/sdk-cpp
				majicdesigns/MD_REncoder@^1.0.1											;	https://github.com/MajicDesigns/MD_REncoder
				h2zero/NimBLE-Arduino@^1.4.1											;	https://github.com/h2zero/NimBLE-Arduino
				cnmat/OSC																;	https://github.com/CNMAT/OSC
				dxinteractive/ResponsiveAnalogRead@^1.2.1								;	https://github.com/dxinteractive/ResponsiveAnalogRead
				bodmer/TFT_eSPI@2.5.21													;	https://github.com/Bodmer/TFT_eSPI
				fortyseveneffects/MIDI Library@^5.0.2									;	https://github.com/FortySevenEffects/arduino_midi_library
			 	lathoub/AppleMIDI@^3.2.0												;	https://github.com/lathoub/Arduino-AppleMIDI-Library
				lathoub/BLE-MIDI@^2.2													;	https://github.com/lathoub/Arduino-BLE-MIDI
			 	lathoub/ipMIDI@^1.0.3													;	https://github.com/lathoub/Arduino-ipMIDI
				https://github.com/adafruit/Adafruit_TinyUSB_Arduino
				;USB-MIDI@^1.1.3
				;https://github.com/blekenbleu/EspTinyUSB
				;https://github.com/blekenbleu/TinyMIDIUSB
;upload_port  = /dev/cu.usbmodem14201				; enter Bootloader mode to enable flash via USB-CDC: connect it via USB, hold BOOT button, press RST button once, then release BOOT button.
													; RST to exit Bootloader mode
;monitor_port = ${env:bpi-leaf-s3.upload_port}
